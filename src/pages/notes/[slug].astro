---
import { readOne, readAll } from "../../lib/markdoc/read";
import { notes } from "../../lib/markdoc/frontmatter.schema";
import Renderer from "../../components/Renderer.astro";
import BlogPostMeta from "../../components/BlogPostMeta.astro";
import NoteContentLayout from "../../layouts/NoteContentLayout.astro";
import { SITE_URL } from "../../config";

export async function getStaticPaths() {
  const posts = await readAll({
    directory: "notes",
    frontmatterSchema: notes,
  });

  // we don't want to generate pages for posts that link to external websites
  const filteredPosts = posts
    .filter((p) => p.frontmatter.draft !== true)
    .filter(({ frontmatter }) => !frontmatter.external);

  return filteredPosts.map((post) => {
    return { params: { slug: post.slug } };
  });
}

const { slug } = Astro.params;
if (typeof slug !== "string") {
  throw Error(`slug should be string. Received: ${slug}`);
}

const { content, frontmatter } = await readOne({
  directory: "notes",
  slug,
  frontmatterSchema: notes,
});

const ogImageAbsoluteUrl =
  frontmatter.external !== true && frontmatter.ogImagePath
    ? new URL(frontmatter.ogImagePath, SITE_URL).toString()
    : undefined;
---

<NoteContentLayout title={frontmatter.title} date={frontmatter.date}>
  <BlogPostMeta
    title={frontmatter.title}
    description={frontmatter.external ? undefined : frontmatter.description}
    publishDate={frontmatter.date.toISOString()}
    pagePath={`/notes/${slug}`}
    ogImageAbsoluteUrl={ogImageAbsoluteUrl}
    slot="meta"
  />
  <Renderer content={content} slot="content" />
</NoteContentLayout>
